/*
 * Copyright (C) 2016 likhachev
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package com.ivli.roim.controls;

import com.ivli.roim.events.ProgressEvent;
import com.ivli.roim.events.ProgressListener;
import com.ivli.roim.events.ProgressNotifier;
import java.awt.Dialog;
import java.awt.Window;
import java.awt.event.WindowEvent;
import javax.swing.JDialog;
import javax.swing.JPanel;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

/**
 *
 * @author likhachev
 */
public class ProgressDialog extends JPanel implements ProgressListener {

    JDialog iDialog;
    /**
     * Creates new form ProgressDialog
     */
    private ProgressDialog() {        
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jProgressBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jProgressBar1, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    public void ProgressChanged(ProgressEvent anEvt) {        
        jProgressBar1.setValue(anEvt.getProgress());
        if (anEvt.getProgress() >= 100) {            
           ((ProgressNotifier)anEvt.getSource()).removeProgressListener(this);
            setVisible(false);
            JDialog dlg = (JDialog)this.getRootPane().getParent();
            dlg.dispatchEvent(new WindowEvent(dlg, WindowEvent.WINDOW_CLOSING));
        }    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar jProgressBar1;
    // End of variables declaration//GEN-END:variables

    public static ProgressDialog create(Window aParent, String aCaption) {
        ProgressDialog panel = new ProgressDialog();
        
        ///aN.getNotifier().addProgressListener(panel);
        
        panel.iDialog = new JDialog(aParent, Dialog.ModalityType.APPLICATION_MODAL);
        
        if (null != aCaption)
            panel.iDialog.setTitle(aCaption);
        
        panel.iDialog.setContentPane(panel);
        
        panel.iDialog.validate();
        panel.iDialog.pack();
        panel.iDialog.setResizable(false);
        panel.iDialog.setLocation(aParent.getLocation().x + (aParent.getWidth() - panel.iDialog.getWidth())/2, 
                           aParent.getLocation().y + (aParent.getHeight() - panel.iDialog.getHeight())/2);
        return panel;
    }
    
    public void show() {
        iDialog.setVisible(true);
    }
    
    private final static Logger LOG = LogManager.getLogger();
}
